
&nbsp;&nbsp;&nbsp;&nbsp;基于anc软件用户的apcs系统，目前越来越庞大，用户数量已经超过了百万人，apcs系统收集的异步无序计算力，跨越了1000tflops的高度。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;不过，随着apcs系统越来越庞大，apcs系统收集计算力的增幅，也越来越缓慢。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;依旧是因为apcs系统固有的缺陷！<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;apcs系统确实存在缺陷，并非南林归一的技术不够先进，也不是巴特勒无法管理更多的pivot支点，而是因为随着pivot支点的增加，巴特勒需要消耗更多的资源却管理它们，并且有序的分配它们执行任务。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;简单来说，apcs系统收集计算力，存在一个极限瓶颈，一旦到达了瓶颈状态，即增加的pivot支点性能与巴特勒需要管理pivot支点所付出的计算力一致的时候，apcs系统便会达到饱和状态。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;举一个例子说明，如果anc拥有一千五百万用户的时候，巴特勒需要5000tflops的计算力管理它们。现在又增加了100万anc用户，这100万anc用户带来了1000tflops的计算力资源。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;但是，在1500万用户的基础上，再加100万用户，巴特勒需要消耗1000tflops的计算力资源去管理它们。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;那么，增加100万用户，增加了1000tflops的计算力资源，又消耗了1000tflops的计算资源管理它们，是不是在白费劲？<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;不！<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;不是白费劲！<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;应该是更费劲！<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;巴特勒管理1500万个pivot支点与1600万个pivot支点的难度，并非一样的程度。事实上，需要管理的pivot支点越多，对于巴特勒的压力越大。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;因为，管理更多的pivot支点，便会遇见更多的突发事件。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;依旧举例说明，当南林归一需要计算力资源的时候，巴特勒首先会在apcs系统里面，筛选计算力更强大，网络环境更优秀，使用状态更稳定的单个pivot支点。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;简单来说，便是择优筛选！<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;如果南林归一需要200tflops的计算资源，巴特勒会筛选大约十多万至二十多万pivot支点，为南林归一汲取更优秀的异步无序计算力。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;不过，即便是十多二十万个pivot支点，也是很难管理的事情。因为，在南林归一执行任务的时候，任何一个pivot支点，都有可能发生问题。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;一旦发生了问题，巴特勒需要转移负载，将发生问题的pivot支点，所承担的工作任务，在极短时间内，分配到另外一个pivot支点。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;基于这样的规则，在汲取异步无序计算力的时候，巴特勒其实进行了两次择优筛选工作，第一次择优筛选的pivot支点，直接成为异步无序计算力的提供支点。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;然后第二次择优筛选的pivot支点，则成为了备用支点。当正在使用的pivot支点发生了问题，备用支点立刻顶上去。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;由于这样的规则，如果巴特勒管理了上千万个pivot支点，那会遇见多少问题？应该是每一秒钟，都会发生大量问题呢！<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;南林归一也没有办法更改这样的规则，事实上，这样的规则，还是南林归一设计的，而且是目前最好的异步并行计算系统规则。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;毕竟apcs系统的计算力资源来源于无法掌控的第三方计算机，又怎么可能稳定呢？<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;这是apcs系统的固有缺点。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;在固有缺点的阻碍下，apcs系统确确实实存在瓶颈，准确来说，任何一个异步并行计算系统，均存在这样的缺陷。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;如果异步并行计算系统没有缺陷，那还搞什么超级计算机？南林归一又何必觊觎cell处理器串联成私有的超级计算机呢？<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;“sir，系统已经优化完成200tflops计算力，是否需要更多？”巴特勒询问着南林归一。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;刚刚已经介绍了apcs系统的工作原理，巴特勒优化计算力的时候，进行了两轮择优筛选工作，自然需要一定时间处理。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;南林归一笑着否定，“不需要！区区一个文部科学省，从他们的官方网站跳转进去，根本没有任何难度。”<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;自从上一次，南林归一带领后羿联盟，将文部科学省定为攻击目标之后，文部科学省的官方网站是三天两头就被入侵。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;黑客光顾文部科学省的官方网站，几乎成了家常便饭的事情。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;南林归一偷偷潜入了文部科学省的官方网站，根本没有引起任何波动，负责文部科学省官方网站防御的网络安全专家，几乎是睁一只眼闭一只眼的状态。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;只要入侵文部科学省官方网站的黑客，不篡改信息，不更进一步的入侵，只是简简单单的攻破文部科学省的官方网站，他们就不会处理。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;当然了，一旦入侵的黑客，试图篡改信息，或者是更进一步的尝试潜入内部系统，那就会遭到雷霆打击。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;南林归一根本不在乎文部科学省的官方网站，是否有安全值守人员监管，以他的技术力量，隐匿入侵不是问题。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;至少在南林归一成功进入文部科学省的官方网站web服务器的时候，根本没有被发现。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;南林归一当然不满足于，停留在官方网站的web服务器之中，他准备进入文部科学省的内部系统，在内部系统搜索普天机械工厂的信息。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;如果内部系统里面也搜索不到，他还会进入机密数据库查找。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;南林归一潜入文部科学省内部系统的行动，几乎是一气呵成，没有遭到任何阻拦，这样的情况，让南林归一都有一点诧异。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;虽然南林归一看不起文部科学省的网络防御，但文部科学省的网络安全专家，随时随地可以联系外务省的网络安全情报局。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;哪怕网络安全情报局拦不住南林归一，但也可以阻挡一下。可现在，完全无阻挡的进入了文部科学省的内部系统，倒是让南林归一相当的诧异。<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;他的入侵实在是太顺利了，难道有诈吗？(未完待续。)